 <beans:beans xmlns="http://www.springframework.org/schema/security"  
    xmlns:beans="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">  
    <http auto-config="true">  
        <intercept-url pattern="/privatePage" access="isAuthenticated()" />
        <form-login login-page="/login"/> 
         <access-denied-handler error-page="/access-denied" /> 
         <logout logout-success-url="/"/>
        <csrf disabled="true"/> 
    </http>  
    <context:component-scan base-package="model" />
    
    <beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.h2.Driver" />
		<beans:property name="url" value="jdbc:h2:tcp://localhost/~/TestVinodh" />
		<beans:property name="username" value="sa" />
		<beans:property name="password" value="sa@123" />
	</beans:bean>
    
    <authentication-manager>
	  <authentication-provider>
	  <password-encoder hash="sha-256"/>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager>
    
    <!-- 
    <authentication-manager>  
      <authentication-provider> 
      <password-encoder hash="sha-256"/> 
        <user-service>  
        <user name="vinodh" password="7f8dfcffb9aba02f0333516fad641a6f44431f1ca80c41159ba11c1c62e72636" authorities="ROLE_ADMIN" /> 
        <user name="raj" password="2c3827a002d7a48cd3ad594495f7a3c218094f2a58a81d39c9e513531e914ad5" authorities="ROLE_USER" /> 
        </user-service>  
      </authentication-provider>  
    </authentication-manager>
     -->
     <!-- 
     <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
     <beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
     </beans:bean>  
          
   <authentication-manager>  
      <authentication-provider user-service-ref="userDetailsService"> 
      <password-encoder hash="sha-256"/> 
      </authentication-provider>  
    </authentication-manager>
     
    <beans:bean id="authenticationManager"
    class="org.springframework.security.authentication.ProviderManager">
    <beans:property name="providers">
        <beans:list>
            <beans:ref bean="daoAuthenticationProvider" />
        </beans:list>
    </beans:property>
    
    <beans:bean id="authenticationManager"
    class="org.springframework.security.authentication.ProviderManager">
    <beans:constructor-arg>
		<beans:list>
			<beans:ref bean="daoAuthenticationProvider"/>
		</beans:list>
	</beans:constructor-arg>
</beans:bean>

--> 
</beans:beans>